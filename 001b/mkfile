< ../config.mk

all:QV:
	bin/targets | xargs mk

results/%_mito_R1.paired.fastq results/%_mito_R2.paired.fastq:Q: data/SNAP_bams/%.paired.bam
	echo "[DEBUGGING] splitting mitochondrial $prereq into $target"
	mkdir -p $(dirname $target)
	R1_FILE=$(echo $target | cut -d" " -f1)
	R2_FILE=$(echo $target | cut -d" " -f2)
	echo "[DEBUGGING] R1 file is $R1_FILE"
	echo "[DEBUGGING] R2 file is $R2_FILE"
	samtools view -h -f 2 -F 4 $prereq \
	| grep -e "chrM__" -e "^@" \
	| samtools view -S -b - \
	| bamToFastq -i - -fq $R1_FILE.build -fq2 $R2_FILE.build \
	&& mv $R1_FILE.build $R1_FILE \
	&& mv $R2_FILE.build $R2_FILE

results/%.unmapped.f12F56:Q: data/SNAP_bams/%.paired.bam
	echo "[DEBUGGING] extracting unmapped reads with unmapped mate (-f12) and not primary alligment (-F256)."
	mkdir -p $(dirname $target)
	samtools view -h -u -f 12 -F 256 $prereq > $target.build \
	&& mv $target.build $target

results/%.unmapped.f8F260:Q: data/SNAP_bams/%.paired.bam
	echo "[DEBUGGING] extracting mapped reads (-F260 -meaning NOT read unmapped) whose mate is unmapped (-f8)."
	mkdir -p $(dirname $target)
	samtools view -h -u -f 8 -F 260 $prereq > $target.build \
	&& mv $target.build $target

results/%.unmapped.f4F264:Q: data/SNAP_bams/%.paired.bam
	echo "[DEBUGGING] extracting unmapped reads (-f4) whose mate is mapped (-F264 -meaning NOT mate unmapped)."
	mkdir -p $(dirname $target)
	samtools view -h -u -f 4 -F 264 $prereq > $target.build \
	&& mv $target.build $target

results/%_unmapped_R1.paired.fastq results/%_unmapped_R2.paired.fastq:Q: results/%.unmapped.f4F264 results/%.unmapped.f8F260 results/%.unmapped.f12F56
	echo "[DEBUGGING] splitting nonalligned $prereq into $target"
	mkdir -p $(dirname $target)
	R1_FILE=$(echo $target | cut -d" " -f1)
	R2_FILE=$(echo $target | cut -d" " -f2)
	echo "[DEBUGGING] R1 file is $R1_FILE"
	echo "[DEBUGGING] R2 file is $R2_FILE"
	samtools merge -u - $prereq \
	| samtools sort -o -n - sorted \
	| bamToFastq -i - -fq $R1_FILE.build -fq2 $R2_FILE.build \
	&& mv $R1_FILE.build $R1_FILE \
	&& mv $R2_FILE.build $R2_FILE #\
	# && rm $prereq

results/%_mitochondrial_R1.paired.fastq.gz:Q: results/%_mito_R1.paired.fastq results/%_unmapped_R1.paired.fastq
	echo "[DEBUGGING] compressing R1 reads into $target"
	cat $prereq | gzip -f -9 > $target.build \
	&& mv $target.build $target #\
	# && rm $prereq

results/%_mitochondrial_R2.paired.fastq.gz:Q: results/%_mito_R2.paired.fastq results/%_unmapped_R2.paired.fastq
	echo "[DEBUGGING] compressing R2 reads into $target"
	cat $prereq | gzip -f -9 > $target.build \
	&& mv $target.build $target #\
	# && rm $prereq

results/%.paired.bamToFastq_OK:Q: results/%_mitochondrial_R1.paired.fastq.gz results/%_mitochondrial_R2.paired.fastq.gz
	echo "[DEBUGGING] generating checkpoint of $target"
	echo "$target successfully done" > $target

clean:V:
	set -x
	find results/ -type f ! -name "*.fastq.gz" -exec rm "{}" \;
