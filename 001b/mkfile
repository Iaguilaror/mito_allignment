< ../config.mk

all:QV:
	bin/targets | xargs mk

results/R1_Mito_%.fastq results/R2_Mito_%.fastq:Q: data/SNAP_bams/%.bam
	echo "[DEBUGGING] splitting mitochondrial $prereq into $target"
	mkdir -p $(dirname $target)
	R1_FILE=$(echo $target | cut -d" " -f1)
	R2_FILE=$(echo $target | cut -d" " -f2)
	echo "[DEBUGGING] R1 file is $R1_FILE"
	echo "[DEBUGGING] R2 file is $R2_FILE"
	samtools view -h -f 2 -F 4 $prereq \
	| grep -e "chrM__" -e "^@" \
	| samtools view -S -b - \
	| bamToFastq -i - -fq $R1_FILE.build -fq2 $R2_FILE.build \
	&& mv $R1_FILE.build $R1_FILE \
	&& mv $R2_FILE.build $R2_FILE

'results/(.*)\.unmapped\.f([0-9]+)F([0-9]+)':Q: 'data/SNAP_bams/\1\.bam'
	mkdir -p $(dirname $target)
	samtools view -h -u -f $stem2 -F $stem3 $prereq > $target.build \
	&& mv $target.build $target

results/R1_nonalligned_%.fastq \
results/R2_nonalligned_%.fastq:Q: results/%.unmapped.f4F264 results/%.unmapped.f8F260 results/%.unmapped.f12F56
	echo "[DEBUGGING] splitting nonalligned $prereq into $target"
	mkdir -p $(dirname $target)
	R1_FILE=$(echo $target | cut -d" " -f1)
	R2_FILE=$(echo $target | cut -d" " -f2)
	FILE_FOR_HEADER=$(echo $prereq | cut -d" " -f1)
	echo "[DEBUGGING] R1 file is $R1_FILE"
	echo "[DEBUGGING] R2 file is $R2_FILE"
	echo "[DEBUGGING] getting header from $FILE_FOR_HEADER"
	samtools merge -u - $prereq \
	| samtools sort -o -n - sorted \
	| bamToFastq -i - -fq $R1_FILE.build -fq2 $R2_FILE.build \
	&& mv $R1_FILE.build $R1_FILE \
	&& mv $R2_FILE.build $R2_FILE \
	&& rm $prereq

'results/(R[12])_formito_(.*)\.fastq\.gz':RQ: 'results/\1_Mito_\2\.fastq' 'results/\1_nonalligned_\2\.fastq'
	echo "[DEBUGGING] compressing $stem1 reads into $target"
	cat $prereq | gzip -f -9 > $target.build \
	&& mv $target.build $target \
	&& rm $prereq

clean:V:
	set -x
	find results/ -type f ! -name "*.fastq.gz" -exec rm "{}" \;
